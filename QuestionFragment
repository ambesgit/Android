ackage com.example.ambes.briantest.UI;

import android.app.Activity;
import android.content.Context;
import android.content.res.Configuration;
import android.net.Uri;
import android.os.Bundle;
import android.app.Fragment;
import android.support.v7.app.ActionBarActivity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.Button;
import android.widget.ListView;
import android.widget.TextView;

import com.example.ambes.briantest.R;
import com.example.ambes.briantest.questions.QuestionObject;
import com.example.ambes.briantest.util.CheckTextLength;

import java.util.zip.Inflater;

import javax.security.auth.callback.CallbackHandler;

public class QuestionDisplay extends Fragment {
    private int[] mLevelOfQuestions={R.drawable.abc_btn_check_to_on_mtrl_015};
    private ListView lv;
    private View mView;
    private Activity context;
    private MyArrayAdapter adapter;
    private OnFragmentInteractionListener mListener;
    private static int mConf=0;


    public QuestionDisplay() {
        // Required empty public constructor
    }
    //-------------------------------------------------------------------------------------------
    private static LayoutInflater mInflater;
    private static ViewGroup mViewGroup;
    //---------------------------------------------------------------------------------------------
    //this will be only one member at a time, the value will change dynamically
    private static String initmDataArrayQuestions= QuestionObject.QUESTIONS.size()>0?QuestionObject.QUESTIONS.get(MainActivity.getmEntry()):"";

    private static String[] mDataArrayQuestions={initmDataArrayQuestions};
    //this will be called to update the mDataArrayQuestion holder single question
    public void setmDataArrayQuestions(String mDataArrayQuestions) {

        this.mDataArrayQuestions[0] =mDataArrayQuestions;
        adapter=new MyArrayAdapter();
        lv.setAdapter(adapter);



    }

    //---------------------------------------------------------------------------------------------


    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

    }

    @Override
    public void onSaveInstanceState(Bundle outState) {
        super.onSaveInstanceState(outState);

    }

    @Override
    public void onAttach(Activity activity) {
        super.onAttach(activity);
        context=activity;
    }

    @Override
    public void onActivityCreated(Bundle savedInstanceState) {
        super.onActivityCreated(savedInstanceState);
        mView = mInflater.inflate(R.layout.fragment_question, mViewGroup, false);
        lv = (ListView) mView.findViewById(R.id.listQuestion);
        adapter = new MyArrayAdapter();
        lv.setAdapter(adapter);
    }

    //--------------------------------------------------------------------------------------------
    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
            mInflater=inflater;
            mViewGroup=container;
            mView = inflater.inflate(R.layout.fragment_question, container, false);
            lv = (ListView) mView.findViewById(R.id.listQuestion);
            adapter = new MyArrayAdapter();
            lv.setAdapter(adapter);
            // Inflate the layout for this fragment

            return mView;

    }
    public class Holder{
        //Button btn;
        TextView txt;
    }
    private class MyArrayAdapter extends BaseAdapter {
        Holder mHolder;
        @Override
        public int getCount() {
            //this will be changed for the real data
            return mDataArrayQuestions.length;
        }

        @Override
        public Object getItem(int position) {

            return mDataArrayQuestions[position];
        }

        @Override
        public long getItemId(int position) {

            return position;
        }
        //this class is for holding the views to be bind to data


        @Override
        public View getView(int pos,View container,ViewGroup parent){
            //if the view is empty go and use it
            View views=container;
            //if there is no viewholder object go inflate and pass inside this code create the
            //holder object and initialize the text or image or ..views and store the object
            //inside the paramter view pass to this method
            if(views==null){
                //ask the system for service to inflate the view
                LayoutInflater infla=(LayoutInflater)getActivity().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
                //get inflated the layout which is a container for the
                // views(in this case,Image and Text views)
                views=infla.inflate(R.layout.questions,null);
                //you need the Holder object to hold the references to
                // your views then you avoid calling the setTag and then
                mHolder=new Holder();
                //you need to find the R.id in the new inflated layout, not in the main layout
                //that is why we use the views-->which is inflated with the layout that holds our
                //views for flag and country
                //mHolder.btn=(Button) views.findViewById(R.id.levelof);
                mHolder.txt=(TextView) views.findViewById(R.id.questionlist);
                //here you are adding the views to the inflated layout at one step
                views.setTag(mHolder);
            }else{
                //if the view is not empty, get reference to the existsing view then grow the list
                mHolder =(Holder)views.getTag();
            }
            //here is where you acually bind the data and view element, it doesn't matter how many
            //view elements you have in the layout to be populate
            //mHolder.img.setImageResource(mLevelOfQuestions[pos]);
            //get data processed

            mHolder.txt.setText(mDataArrayQuestions[pos]);

            return views;
        }
    }

    public interface OnFragmentInteractionListener {
        // TODO: Update argument type and name
        public void onFragmentInteraction(Uri uri);
    }

    @Override
    public void onConfigurationChanged(Configuration newConfig) {
        super.onConfigurationChanged(newConfig);
        if(newConfig.orientation==Configuration.ORIENTATION_LANDSCAPE){
            mConf=1;
        }
    }
}

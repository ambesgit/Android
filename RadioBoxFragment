package com.example.ambes.briantest.UI;

import android.app.Activity;
import android.content.res.Configuration;
import android.net.Uri;
import android.os.Bundle;
import android.app.Fragment;
import android.provider.MediaStore;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.Toast;

import com.example.ambes.briantest.R;
import com.example.ambes.briantest.choices.ChoiceObject;
import com.example.ambes.briantest.questions.QuestionObject;
import com.example.ambes.briantest.util.ChapterChange;
import com.example.ambes.briantest.util.CheckTextLength;


public class RadioFragment extends Fragment{

    private Activity context;
    private OnFragmentInteractionListener mListener;
    public static Button mNextradoibutton;
    public static Button mPrevious;
    public static  Button mAnswer;

    //-----------------------------
    private RadioButton mRadioButtonA;
    private RadioButton mRadioButtonB;
    private RadioButton mRadioButtonC;
    private RadioButton mRadioButtonD;
    //---------------------------
    public RadioFragment() {
        // Required empty public constructor
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

    }


    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment
        View v=inflater.inflate(R.layout.fragment_radio, container, false);
        mRadioButtonA=(RadioButton)v.findViewById(R.id.a);
        mRadioButtonB=(RadioButton)v.findViewById(R.id.b);
        mRadioButtonC=(RadioButton)v.findViewById(R.id.c);
        mRadioButtonD=(RadioButton)v.findViewById(R.id.d);
        try {
            if(QuestionObject.QUESTIONS.size()>0) {
                mRadioButtonD.setText("D. " + ChoiceObject.ChoiceD.get(MainActivity.getmEntry()));
                mRadioButtonA.setText("A. " + ChoiceObject.ChoiceA.get(MainActivity.getmEntry()));
                mRadioButtonB.setText("B. " + ChoiceObject.ChoiceB.get(MainActivity.getmEntry()));
                mRadioButtonC.setText("C. " + ChoiceObject.ChoiceC.get(MainActivity.getmEntry()));
            }
            else{
                mRadioButtonD.setVisibility(View.INVISIBLE);
                mRadioButtonA.setVisibility(View.INVISIBLE);
                mRadioButtonB.setVisibility(View.INVISIBLE);
                mRadioButtonC.setVisibility(View.INVISIBLE);
                ChapterChange.Enable();
            }
            }
        catch (Exception e){
                mRadioButtonD.setVisibility(View.INVISIBLE);
                mRadioButtonA.setVisibility(View.INVISIBLE);
                mRadioButtonB.setVisibility(View.INVISIBLE);
                mRadioButtonC.setVisibility(View.INVISIBLE);
                ChapterChange.Enable();
                e.printStackTrace();}
        mNextradoibutton=(Button)v.findViewById(R.id.rNext);
        mPrevious=(Button)v.findViewById(R.id.rprevious);
        mAnswer=(Button)v.findViewById(R.id.answer);

        mAnswer.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if(MainActivity.mCountQuestionsPerChapter==0){
                    MainActivity.giveMeCurrentChapter();
                }
                mAnswer.setEnabled(false);
                mAnswer.setClickable(false);
                //
                mAnswer.setEnabled(true);
                mAnswer.setClickable(true);
            }

        });
        mNextradoibutton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                mNextradoibutton.setEnabled(false);
                mNextradoibutton.setClickable(false);
                if(QuestionObject.QUESTIONS.size()>0){
                if (MainActivity.mCountQuestionsPerChapter == 0) {
                    MainActivity.giveMeCurrentChapter();
                }
                   if (MainActivity.getmEntry() + 1 < MainActivity.mCountQuestionsPerChapter) {
                        mListener.getCurrentQuestion(1, QuestionObject.FLAG.get(MainActivity.getmEntry() + 1));

                    }
                   else if(MainActivity.getmEntry()==0){
                       mListener.getCurrentQuestion(1, QuestionObject.FLAG.get(MainActivity.getmEntry()));
                   }

                }
                else{

                    mRadioButtonD.setVisibility(View.INVISIBLE);
                    mRadioButtonA.setVisibility(View.INVISIBLE);
                    mRadioButtonB.setVisibility(View.INVISIBLE);
                    mRadioButtonC.setVisibility(View.INVISIBLE);
                    MainActivity.setmEntry(0);
                }

                mNextradoibutton.setEnabled(true);
                mNextradoibutton.setClickable(true);
            }

        });
        mPrevious.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                mPrevious.setEnabled(false);
                mPrevious.setClickable(false);
                if(MainActivity.mCountQuestionsPerChapter==0){
                    MainActivity.giveMeCurrentChapter();
                }

                if(QuestionObject.QUESTIONS.size()>0) {

                        if (MainActivity.getmEntry() - 1 >= 0) {
                            mListener.getCurrentQuestion(-1, QuestionObject.FLAG.get(MainActivity.getmEntry() - 1));
                        }
                        else if(MainActivity.getmEntry()==0){
                            mListener.getCurrentQuestion(-1, QuestionObject.FLAG.get(MainActivity.getmEntry()));
                        }

                    }

                mPrevious.setEnabled(true);
                mPrevious.setClickable(true);
            }
        });


        return v;
    }

    @Override
    public void onAttach(Activity activity) {
        super.onAttach(activity);
        context=activity;
    }

    @Override
    public void onActivityCreated(Bundle savedInstanceState) {
        super.onActivityCreated(savedInstanceState);
        //because the activity implements the interface, so it is passibible tocast the subclass to
        //superclass or interface, in this way you get a reference to the activity but you only call
        //methods that you implement from the interface because the type of the reference
        mListener=(OnFragmentInteractionListener)context;
    }

   // check entry index of the above

    /////////////////////////////////////////////////////////////////////////////
    public interface OnFragmentInteractionListener {
        // TODO: Update argument type and name
        public void onFragmentInteraction(Uri uri);
        public void getCurrentQuestion(int number,int flag);

    }

}
